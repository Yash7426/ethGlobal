/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Register, RegisterInterface } from "../../contracts/Register";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "lookup",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "LogBytes",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "ccnsReceiverAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "enableChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lookup",
    outputs: [
      {
        internalType: "contract ICrossChainNameServiceLookup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_router",
    outputs: [
      {
        internalType: "contract IRouterClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_chains",
    outputs: [
      {
        internalType: "uint64",
        name: "chainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "ccnsReceiverAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001c3f38038062001c3f833981810160405281019062000037919062000111565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000158565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d982620000ac565b9050919050565b620000eb81620000cc565b8114620000f757600080fd5b50565b6000815190506200010b81620000e0565b92915050565b600080604083850312156200012b576200012a620000a7565b5b60006200013b85828601620000fa565b92505060206200014e85828601620000fa565b9150509250929050565b60805160a051611aac620001936000396000818161076e0152610a6a0152600081816103ef0152818161050901526108eb0152611aac6000f3fe6080604052600436106100595760003560e01c80631e59c5291461006557806351cff8d91461008e578063581bdd16146100b75780635b54137d146100e2578063b672356214610121578063e0b30b1f1461014a57610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c60048036038101906100879190610cf3565b610175565b005b34801561009a57600080fd5b506100b560048036038101906100b09190610d4f565b610833565b005b3480156100c357600080fd5b506100cc6108e9565b6040516100d99190610ddb565b60405180910390f35b3480156100ee57600080fd5b5061010960048036038101906101049190610e2c565b61090d565b60405161011893929190610e9a565b60405180910390f35b34801561012d57600080fd5b5061014860048036038101906101439190610efd565b61097b565b005b34801561015657600080fd5b5061015f610a68565b60405161016c9190610f71565b60405180910390f35b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516101a290610fe9565b60405180910390a1600080805490509050600081116101f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed90611055565b60405180910390fd5b60005b8181101561073657600080828154811061021657610215611075565b5b90600052602060002090600202016040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090507fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516102f0906110f0565b60405180910390a160006040518060a00160405280836020015160405160200161031a9190611110565b60405160208183030381529060405281526020018787604051602001610341929190611199565b6040516020818303038152906040528152602001600067ffffffffffffffff8111156103705761036f610b6a565b5b6040519080825280602002602001820160405280156103a957816020015b610396610b0b565b81526020019060019003908161038e5790505b508152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016103e660405180602001604052806207a120815250610a8c565b815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded8460000151846040518363ffffffff1660e01b815260040161044c9291906113a5565b602060405180830381865afa158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d91906113ea565b9050804710156104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c990611489565b60405180910390fd5b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516104ff906114f5565b60405180910390a17f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f9828560000151856040518463ffffffff1660e01b81526004016105679291906113a5565b60206040518083038185885af1935050505080156105a357506040513d601f19601f820116820180604052508101906105a0919061154b565b60015b6106f2576105af611585565b806308c379a00361068057506105c36115a7565b806105ce5750610682565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab8160405160200161060091906116bf565b60405160208183030381529060405260405161061c91906116e1565b60405180910390a180604051602001610635919061174f565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067791906116e1565b60405180910390fd5b505b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516106af906117bd565b60405180910390a16040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990611829565b60405180910390fd5b507fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161072090611895565b60405180910390a18360010193505050506101f9565b507fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161076490611901565b60405180910390a17f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631e59c52984846040518363ffffffff1660e01b81526004016107c7929190611199565b600060405180830381600087803b1580156107e157600080fd5b505af11580156107f5573d6000803e3d6000fd5b505050507fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516108269061196d565b60405180910390a1505050565b600047905060008273ffffffffffffffffffffffffffffffffffffffff168260405161085e906119be565b60006040518083038185875af1925050503d806000811461089b576040519150601f19603f3d011682016040523d82523d6000602084013e6108a0565b606091505b50509050806108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db90611a1f565b60405180910390fd5b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061091d57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905083565b600060405180606001604052808567ffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600101555050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606397a657c960e01b82604051602401610aa79190611a5b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ba282610b59565b810181811067ffffffffffffffff82111715610bc157610bc0610b6a565b5b80604052505050565b6000610bd4610b3b565b9050610be08282610b99565b919050565b600067ffffffffffffffff821115610c0057610bff610b6a565b5b610c0982610b59565b9050602081019050919050565b82818337600083830152505050565b6000610c38610c3384610be5565b610bca565b905082815260208101848484011115610c5457610c53610b54565b5b610c5f848285610c16565b509392505050565b600082601f830112610c7c57610c7b610b4f565b5b8135610c8c848260208601610c25565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cc082610c95565b9050919050565b610cd081610cb5565b8114610cdb57600080fd5b50565b600081359050610ced81610cc7565b92915050565b60008060408385031215610d0a57610d09610b45565b5b600083013567ffffffffffffffff811115610d2857610d27610b4a565b5b610d3485828601610c67565b9250506020610d4585828601610cde565b9150509250929050565b600060208284031215610d6557610d64610b45565b5b6000610d7384828501610cde565b91505092915050565b6000819050919050565b6000610da1610d9c610d9784610c95565b610d7c565b610c95565b9050919050565b6000610db382610d86565b9050919050565b6000610dc582610da8565b9050919050565b610dd581610dba565b82525050565b6000602082019050610df06000830184610dcc565b92915050565b6000819050919050565b610e0981610df6565b8114610e1457600080fd5b50565b600081359050610e2681610e00565b92915050565b600060208284031215610e4257610e41610b45565b5b6000610e5084828501610e17565b91505092915050565b600067ffffffffffffffff82169050919050565b610e7681610e59565b82525050565b610e8581610cb5565b82525050565b610e9481610df6565b82525050565b6000606082019050610eaf6000830186610e6d565b610ebc6020830185610e7c565b610ec96040830184610e8b565b949350505050565b610eda81610e59565b8114610ee557600080fd5b50565b600081359050610ef781610ed1565b92915050565b600080600060608486031215610f1657610f15610b45565b5b6000610f2486828701610ee8565b9350506020610f3586828701610cde565b9250506040610f4686828701610e17565b9150509250925092565b6000610f5b82610da8565b9050919050565b610f6b81610f50565b82525050565b6000602082019050610f866000830184610f62565b92915050565b600082825260208201905092915050565b7f5374617274696e6720726567697374726174696f6e0000000000000000000000600082015250565b6000610fd3601583610f8c565b9150610fde82610f9d565b602082019050919050565b6000602082019050818103600083015261100281610fc6565b9050919050565b7f4e6f20636861696e7320656e61626c6564000000000000000000000000000000600082015250565b600061103f601183610f8c565b915061104a82611009565b602082019050919050565b6000602082019050818103600083015261106e81611032565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f507265706172696e67206d657373616765000000000000000000000000000000600082015250565b60006110da601183610f8c565b91506110e5826110a4565b602082019050919050565b60006020820190508181036000830152611109816110cd565b9050919050565b60006020820190506111256000830184610e7c565b92915050565b600081519050919050565b60005b83811015611154578082015181840152602081019050611139565b60008484015250505050565b600061116b8261112b565b6111758185610f8c565b9350611185818560208601611136565b61118e81610b59565b840191505092915050565b600060408201905081810360008301526111b38185611160565b90506111c26020830184610e7c565b9392505050565b600081519050919050565b600082825260208201905092915050565b60006111f0826111c9565b6111fa81856111d4565b935061120a818560208601611136565b61121381610b59565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61125381610cb5565b82525050565b61126281610df6565b82525050565b60408201600082015161127e600085018261124a565b5060208201516112916020850182611259565b50505050565b60006112a38383611268565b60408301905092915050565b6000602082019050919050565b60006112c78261121e565b6112d18185611229565b93506112dc8361123a565b8060005b8381101561130d5781516112f48882611297565b97506112ff836112af565b9250506001810190506112e0565b5085935050505092915050565b600060a083016000830151848203600086015261133782826111e5565b9150506020830151848203602086015261135182826111e5565b9150506040830151848203604086015261136b82826112bc565b9150506060830151611380606086018261124a565b506080830151848203608086015261139882826111e5565b9150508091505092915050565b60006040820190506113ba6000830185610e6d565b81810360208301526113cc818461131a565b90509392505050565b6000815190506113e481610e00565b92915050565b600060208284031215611400576113ff610b45565b5b600061140e848285016113d5565b91505092915050565b7f496e73756666696369656e742066756e647320666f722063726f73732d63686160008201527f696e206665650000000000000000000000000000000000000000000000000000602082015250565b6000611473602683610f8c565b915061147e82611417565b604082019050919050565b600060208201905081810360008301526114a281611466565b9050919050565b7f53656e64696e67206d6573736167650000000000000000000000000000000000600082015250565b60006114df600f83610f8c565b91506114ea826114a9565b602082019050919050565b6000602082019050818103600083015261150e816114d2565b9050919050565b6000819050919050565b61152881611515565b811461153357600080fd5b50565b6000815190506115458161151f565b92915050565b60006020828403121561156157611560610b45565b5b600061156f84828501611536565b91505092915050565b60008160e01c9050919050565b600060033d11156115a45760046000803e6115a1600051611578565b90505b90565b600060443d10611634576115b9610b3b565b60043d036004823e80513d602482011167ffffffffffffffff821117156115e1575050611634565b808201805167ffffffffffffffff8111156115ff5750505050611634565b80602083010160043d03850181111561161c575050505050611634565b61162b82602001850186610b99565b82955050505050505b90565b600081905092915050565b7f6363697053656e64206661696c65643a20000000000000000000000000000000600082015250565b6000611678601183611637565b915061168382611642565b601182019050919050565b60006116998261112b565b6116a38185611637565b93506116b3818560208601611136565b80840191505092915050565b60006116ca8261166b565b91506116d6828461168e565b915081905092915050565b600060208201905081810360008301526116fb8184611160565b905092915050565b7f434349502053656e64206661696c65643a200000000000000000000000000000600082015250565b6000611739601283611637565b915061174482611703565b601282019050919050565b600061175a8261172c565b9150611766828461168e565b915081905092915050565b7f6363697053656e64206661696c65643a20556e6b6e6f776e206572726f720000600082015250565b60006117a7601e83610f8c565b91506117b282611771565b602082019050919050565b600060208201905081810360008301526117d68161179a565b9050919050565b7f434349502053656e64206661696c65643a20556e6b6e6f776e206572726f7200600082015250565b6000611813601f83610f8c565b915061181e826117dd565b602082019050919050565b6000602082019050818103600083015261184281611806565b9050919050565b7f4d6573736167652073656e74207375636365737366756c6c7900000000000000600082015250565b600061187f601983610f8c565b915061188a82611849565b602082019050919050565b600060208201905081810360008301526118ae81611872565b9050919050565b7f43616c6c696e67207265676973746572206f6e206c6f6f6b7570000000000000600082015250565b60006118eb601a83610f8c565b91506118f6826118b5565b602082019050919050565b6000602082019050818103600083015261191a816118de565b9050919050565b7f526567697374726174696f6e20636f6d706c6574656400000000000000000000600082015250565b6000611957601683610f8c565b915061196282611921565b602082019050919050565b600060208201905081810360008301526119868161194a565b9050919050565b600081905092915050565b50565b60006119a860008361198d565b91506119b382611998565b600082019050919050565b60006119c98261199b565b9150819050919050565b7f4661696c656420746f2077697468647261770000000000000000000000000000600082015250565b6000611a09601283610f8c565b9150611a14826119d3565b602082019050919050565b60006020820190508181036000830152611a38816119fc565b9050919050565b602082016000820151611a556000850182611259565b50505050565b6000602082019050611a706000830184611a3f565b9291505056fea26469706673582212203d751dfd5e947dafed66efcd0a3d36976408baa4456c1cc92cbdeb4c9cc62fe664736f6c63430008130033";

type RegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Register__factory extends ContractFactory {
  constructor(...args: RegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: PromiseOrValue<string>,
    lookup: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Register> {
    return super.deploy(router, lookup, overrides || {}) as Promise<Register>;
  }
  override getDeployTransaction(
    router: PromiseOrValue<string>,
    lookup: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, lookup, overrides || {});
  }
  override attach(address: string): Register {
    return super.attach(address) as Register;
  }
  override connect(signer: Signer): Register__factory {
    return super.connect(signer) as Register__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegisterInterface {
    return new utils.Interface(_abi) as RegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Register {
    return new Contract(address, _abi, signerOrProvider) as Register;
  }
}
